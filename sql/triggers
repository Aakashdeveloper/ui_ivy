
create Database triggertest;
use triggertest

create table sales(
    id Int primary Key,
    product varchar(30) not null,
    value numeric(10.2)
)

create table sales_update(
    id Int primary key  Auto_increment,
    product_id int not null,
    change_at timestamp,
    before_value numeric(10.2) not null,
    after_value numeric(10.2) not null
);


delimiter $$
create trigger before_sales_update before update on sales for each row
begin
	insert into sales_update (product_id,change_at,before_value,after_value)
    values (old.id,now(),old.value,new.value);
end$$

INSERT into sales (id, product, value) VALUES (1,'Soap', 10);
SELECT * from sales;
SELECT * from sales_update;

UPDATE sales set value = 20 where id = 1;

////SP/////

show databases;
use ticket_booking;
create user testuser@localhost identified by 'password';

delimiter $$
create procedure `EduProc121`()
sql security definer
begin
select * from rooms;
end$$

call EduProc121();



delimiter $$
create procedure `JoinData11`()
sql security definer
begin
SELECT c.first_name,c.email,b.customer_id FROM customers c
LEFT JOIN bookings b
ON c.id = b.customer_id
WHERE c.first_name='Jerry';
end$$

call JoinData11();

delimiter $$
create procedure `showFilm1`(in theId int)
begin
select id,name from films where id= theId;
end $$

call showFilm1(4);

Concat()


CREATE functions ticket_booking.readData(id)
Return data_type as
BEGIN 
    SQL Statement
    RETURN value
END;

SELECT Add(room_id, seat_number) As sum from seats