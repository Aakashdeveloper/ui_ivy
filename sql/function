What are aggregate functions?

Perform a calculation on data within a column and
return one result

SHOW DATABASES;
CREATE DATABASE ticket_booking;
use ticket_booking;

SELECT COUNT(*) FROM customers;
SELECT COUNT(first_name) from customers;

SELECT * FROM customers where first_name IS NULL;

SELECT SUM(no_seats) FROM rooms;

SELECT SUM(no_seats) FROM rooms WHERE id>1;

SELECT MAX(length_min)from films;
SELECT MIN(length_min)from films;
SELECT AVG(length_min)from films;

SELECT AVG(length_min)from films
where length_min >120;

# count number of unqiue customers who made a booking in october 2017

SELECT * FROM bookings;
SELECT COUNT(distinct(customer_id)) from bookings;
select * from bookings;

SELECT customer_id, screening_id, count(id) from bookings
Group BY customer_id, screening_id;


INSERT INTO bookings (screening_id, customer_id) 
VALUES (9,37);


SELECT customer_id, screening_id, count(id) from bookings
Group BY customer_id, screening_id
HAVING count(id)>1



//////////
MySql functions
//////////

SELECT CONCAT(first_name,' ',last_name) As full_name from customers;

SELECT CONCAT("HI ",first_name," ",last_name," Your email_id is ",email) As details from customers;

SELECT name, substring(name,1,3)AS short_name from films;
SELECT name, substring(name,2,6)AS short_name from films;
SELECT name, substring(name,2)AS short_name from films;

SELECT name, Upper(name)AS cap_name from films;
SELECT name, lower(name)AS cap_name from films;

SELECT start_time from screenings;
SELECT start_time,DATE(start_time) from screenings;
SELECT start_time,DATE(start_time),Month(start_time) from screenings;

SELECT * from screenings where DATE(start_time) = '2017-10-04';
SELECT start_time,date_format(start_time, "%M %d %Y") from screenings;

SELECT * from screenings where DATE(start_time) between '2017-10-03' AND '2017-10-04';


SELECT OrderID, Quantity,
CASE 
WHEN Quantity > 30 THEN 'The quantity is greater than 30'
WHEN Quantity = 30 THEN 'The quantity is 30'
ELSE 'The quantity is under 30'
END 
AS QuantityText
FROM OrderDetails;

SELECT film_id, start_time,
CASE 
WHEN DATE(start_time) ='2017-10-01' THEN 'This is first day of month'
WHEN DATE(start_time) ='2017-10-02' THEN 'This is second day of month'
WHEN DATE(start_time) ='2017-10-03' THEN 'This is third day of month'
ELSE 'Next days after 3'
END 
AS Message
FROM screenings;